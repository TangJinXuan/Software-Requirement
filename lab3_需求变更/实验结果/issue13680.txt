issue:13680 Git: Support git with private key password
Time:2016-10-13T13:58:39Z

Commenter:lw-schick Time:2016-10-13T13:58:3
Requirement changed context
Comment Context:  VSCode Version: 1.6.0 Commit e52fb0b Date 2016-10-10T18:37:40.189Z Shell 1.3.7 Renderer 52.0.2743.82 Node 6.5.0 OS Version: Windows 7 Pro  Steps to Reproduce:  Create a public-private key pair with password protection add them to your github account setup git to use the private key file try to push something with git  Result: git pull Permission denied, please try again. Permission denied, please try again. Permission denied (publickey,password). fatal: Could not read from remote repository.  Please make sure you have the correct access rights and t

Commenter:joaomoreno Time:2016-10-14T06:20:5
Comment Context: Does it work from the command line? How exactly do you setup git to use the private key file

Commenter:lw-schick Time:2016-10-14T06:22:4
Requirement changed context
Comment Context: It works from the command line. Actually I setup git via tortoise git - so I guess all is properly done

Commenter:lw-schick Time:2016-10-14T06:24:4
Requirement changed context
Comment Context:

Commenter:joaomoreno Time:2016-10-14T06:26:2
Requirement changed context
Comment Context: How do you launch the command line? Which command line

Commenter:lw-schick Time:2016-10-14T06:29:0
Requirement changed context
Comment Context: I use git bash (MINGW64) on windows

Commenter:joaomoreno Time:2016-10-14T06:32:1
Requirement changed context
Comment Context: Right. So, we might have to add a git.sshkey setting too, like Tortoise

Commenter:entr0cks Time:2016-11-02T17:24:2
Requirement changed context
Comment Context: With Windows 10, Git 2.10.1. Had problems using git on vscode with my production server, so I created a test server. At first, with a password protected user (no keys), same errors - no credential prompt pop ups or anything. Using the terminal inside vscode or any random cmd I can push, pull and it works - asks for password. With vscode I can only prepare commits. Pull, push, sync all fail because they aren't asking for password. In production I'm using a passphrase protected key with a different 5 digit port for ssh. Also I have a few different ssh keys (including git) on one machin

Commenter:lw-schick Time:2016-11-03T06:58:5
Requirement changed context
Comment Context: @joaomoreno Why did you moved it to the backlog

Commenter:joaomoreno Time:2016-11-03T09:44:1
Requirement changed context
Comment Context: Just planning priorities. You can attempt a pull request though. \ud83d\udc4

Commenter:ItachiSan Time:2016-11-11T11:51:2
Requirement changed context
Comment Context: Waiting for it \ud83d\ude0

Commenter:garambola Time:2017-02-02T20:15:3
Requirement changed context
Comment Context: Any update on this? I'm having the same problem and it's pretty annoying \ud83d\ude1

Commenter:hashhar Time:2017-02-15T04:00:0
Requirement changed context
Comment Context: @joaomoreno I'm taking a stab at this. It affects me personally now as I recently moved to key based security. People can track my progress here.

Commenter:joaomoreno Time:2017-02-15T10:12:5
Requirement changed context
Comment Context: @hashhar That's awesome! \ud83c\udf7b  Let me know if you hit some walls

Commenter:hashhar Time:2017-02-15T15:27:1
Requirement changed context
Comment Context: @joaomoreno I was looking into the places that need change and found the following: Current Scenario:  If you have an ssh agent running with the key added to it, you can perform all operations except clone (because node.url.parse() doesn't work for ssh urls). If ssh-agent is not running all git commands that involve network activity (fetch, clone, push, pull) fail. The error is generated by git.exe.  Proposed Changes:   Not needed, see next comment Add an overload to url.parse() (where?) to make sure ssh urls are also recognised.  Add a config key, git.sshkey (location of private key (limited to openssh keys at the moment - because git supports those natively, will look into putty keys later)).  Add a conditional where the git extension is initialised to start an SSH agent (if one is not running) and add the key. Will need to somehow (quickpick?) ask user to enter their passphrase. (Do we kill the agent when we close vscode?)  No other changes will be necessary (from what I've currently seen) because the communication with the git endpoint is handled by git.exe not

Commenter:hashhar Time:2017-02-15T15:55:5
Requirement changed context
Comment Context: Okay, my bad about the url parsing. Seems like node accepts urls like git+ssh://git@github.com:hashhar/vscode or ssh://git@github.com:hashhar/vscode but the ssh part has to be explicitly mentioned. What should I do about this, should vscode just magically prepend ssh before urls that match user@server.tld:username/repo format. Or fail silently? (This still needs ssh-agent running though).

Commenter:hashhar Time:2017-02-21T15:56:2
Requirement changed context
Comment Context: Ping @joaomoreno. If you can find the time, do comment on the above issues I have. I have currently hacked together a proof of concept by starting the ssh-agent against a private key. It works but some polish is still needed

Commenter:joaomoreno Time:2017-02-21T16:23:0
Requirement changed context
Comment Context: @hashhar Sorry for the delay... I'm actually quite busy at the moment. Feel free to create the PR and move the discussion there, we'll try to get it in for March

author:rebornix
date:2019-06-13T02:19:02Z
commit title:Merge remote-tracking branch 'upstream/master' into rebornix/browerkeybinding

Commenter:dschu-lab Time:2019-08-05T09:30:2
Requirement changed context
Comment Context: @ronin1 Have you checked out my previous comment

Commenter:homerjam Time:2019-08-06T13:48:2
Requirement changed context
Comment Context:  On macOS, I added this to my ~/.ssh/config at the very end (which is important, don't put anything below): Host *    AddKeysToAgent yes    UseKeychain yes  Then I did a git pull so macOS would ask for my ssh password. After that, macOS is never asking me again for the password, therefore VSCode's version control is working as it should. Hope it helps someone. Cheers!  The above works for me. Perhaps a note could go in here: https://code.visualstudio.com/docs/s

Commenter:Kai-Richardson Time:2019-08-28T16:30:3
Comment Context: This would be great to get either a resolution or a proper work-around on Windows

Commenter:gdamore Time:2019-08-28T17:27:1
Requirement changed context
Comment Context: The \u201cproper work-around\u201d is to use HTTPS URLs instead of SSH, along with the git-scm credential manager.  Works perfect for me.  Sent from Mail for Windows 10  From: Kai Richardson Sent: Wednesday, August 28, 2019 9:33 AM To: microsoft/vscode Cc: gdamore; Mention Subject: Re: [microsoft/vscode] Support git with private key password (#13680)  This would be great to get either a resolution or a proper work-around on Windows. \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub, or mute

Commenter:jgeorgeson Time:2019-08-28T18:15:2
Requirement changed context
Comment Context: @gdamore that is not the correct workaround. This issue is specifically for using SSH protocol. Some people may be using a Git server where the admins specifically don't allow http(s) Git operations so telling them to use https offers no solution to them. @Kai-Richardson It does work on Windows if you configure Git to use an SSH command that supports an SSH agent and open the key in that agent.  TortoiseGit: Set env variable GIT_SSH to the TortoiseGitPlink.exe in your TortoiseGit install folder, convert private keys to PPK format with the included puttygen.exe and then open the private keys in pageant.exe. You could plain PuTTY instead of TortoiseGit, in that case set GIT_SSH to the plink.exe and use puttygen/pageant. Install the official MS OpenSSH (link, I use chocolatey with the SSH Agent Feature enabled), start the ssh-agent service, open private key with ssh-add <path to key file>, and set env variable GIT_SSH to the ssh.exe (usually C:\\Program Files\\OpenSSH-Win64\\ssh.exe). My only issue here is after the 8.0 release it seems to have problems reading private keys with the traditional (-----BEGIN RSA PRIVATE KEY----- format, favoring instead the -----BEGIN OPENSSH PRIVATE KEY----- format)

Commenter:chrismigut Time:2019-08-30T01:41:4
Requirement changed context
Comment Context: Updated my visual studio code, can no longer interact with my github through the application. Version 1.37.1 OS: Windows 10 Pro: version: 10.0.17134 Build 17134 Does the MS team just hate SSH

Commenter:flaw600 Time:2019-08-31T00:57:3
Requirement changed context
Comment Context: Which IDE actually supports SSH passcodes? Because Jetbrains\u2019s products don\u2019t either. So you have 2 of the top 3 vendors not supporting SSH passcodes natively (and the other - Github - I just don\u2019t know if their Atom editor supports SSH passcodes natively). \u2026  On Aug 29, 2019, at 8:43 PM, Chris Migut ***@***.***> wrote:   Updated by visual studio code, can no longer interact with my github through the application. Version 1.37.1   Does the MS team just hate SSH?   \u2014  You are receiving this because you were mentioned.  Reply to this email directly, view it on GitHub <#13680?email_source=notifications&email_token=ACKS4GSGFBF2OGBCXPN55LDQHB3NLA5CNFSM4CSXV3P2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5QI7ZA#issuecomment-526421988>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ACKS4GTHNDBY5DETIRNVX6TQHB3NLANCNFSM4CSXV3P

Commenter:PrinceKK300188 Time:2019-08-31T01:05:3
Requirement changed context
Comment Context: Did I did any error? I just boot up Kali Linux as a double boot on Windows 10. Everything went well and perfect after a long process but somehow the device connected to git being attached and tag together and when I try to get the path. Booommmmm so many files being pulled to my hard drive... What is happening ????  PrinceKK301088 \u2026 On Sat, 31 Aug 2019, 8:59 am flaw600, ***@***.***> wrote:  Which IDE actually supports SSH passcodes? Because Jetbrains\u2019s products  don\u2019t either. So you have 2 of the top 3 vendors not supporting SSH  passcodes natively (and the other - Github - I just don\u2019t know if their  Atom editor supports SSH passcodes natively).   > On Aug 29, 2019, at 8:43 PM, Chris Migut ***@***.***>  wrote:  >  > Updated by visual studio code, can no longer interact with my github  through the application. Version 1.37.1  >  > Does the MS team just hate SSH?  >  > \u2014  > You are receiving this because you were mentioned.  > Reply to this email directly, view it on GitHub <  #13680?email_source=notifications&email_token=ACKS4GSGFBF2OGBCXPN55LDQHB3NLA5CNFSM4CSXV3P2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5QI7ZA#issuecomment-526421988>,  or mute the thread <  https://github.com/notifications/unsubscribe-auth/ACKS4GTHNDBY5DETIRNVX6TQHB3NLANCNFSM4CSXV3PQ  >.  >   \u2014  You are receiving this because you are subscribed to this thread.  Reply to this email directly, view it on GitHub  <#13680?email_source=notifications&email_token=AH4ENDPM4O6N2MT3BFLXGRTQHG66NA5CNFSM4CSXV3P2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5TCASY#issuecomment-526786635>,  or mute the thread  <https://github.com/notifications/unsubscribe-auth/AH4ENDORTBRU3GTGOWJF

Commenter:vitasam Time:2019-09-16T18:27:4
Requirement changed context
Comment Context:  Which IDE actually supports SSH passcodes? Because Jetbrains\u2019s products don\u2019t either. So you have 2 of the top 3 vendors not supporting SSH passcodes natively (and the other - Github - I just don\u2019t know if their Atom editor supports SSH passcodes natively).  There is a duplicate thread about the same issue, someone said that Atom does support SSH key passcodes natively: https://puu.sh/B7qHY/57f3c89f47.p

Commenter:flaw600 Time:2019-09-16T19:59:3
Requirement changed context
Comment Context: The link is key protected \u2026 Sent from my iPhone  On Sep 16, 2019, at 1:32 PM, vitasam ***@***.***> wrote:   Which IDE actually supports SSH passcodes? Because Jetbrains\u2019s products don\u2019t either. So you have 2 of the top 3 vendors not supporting SSH passcodes natively (and the other - Github - I just don\u2019t know if their Atom editor supports SSH passcodes natively).  \u2026  On Aug 29, 2019, at 8:43 PM, Chris Migut @.***> wrote: Updated by visual studio code, can no longer interact with my github through the application. Version 1.37.1 Does the MS team just hate SSH? \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub <#13680?email_source=notifications&email_token=ACKS4GSGFBF2OGBCXPN55LDQHB3NLA5CNFSM4CSXV3P2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5QI7ZA#issuecomment-526421988>, or mute the thread https://github.com/notifications/unsubscribe-auth/ACKS4GTHNDBY5DETIRNVX6TQHB3NLANCNFSM4CSXV3PQ.   There is a duplicate thread about the same issue, someone said that the Atom does support SSH key natively: https://puu.sh/B7qHY/57f3c89f47.png   \u2014  You are receiving this because you were mentioned.  Reply to this email directly, view it on GitHub, or mute the

Commenter:vitasam Time:2019-09-16T20:11:2
Requirement changed context
Comment Context: Interesting, I can open the link. The dialog from Atom: 

Commenter:ubreddy Time:2019-09-19T17:18:1
Requirement changed context
Comment Context: apart from adding the ssh config entries above if windows Set-Service ssh-agent -StartupType Automatic   in powershell now the vs code should not promp

author:aeschli
Requirement changed code
date:2019-09-30T13:59:20Z
commit title:support `code --remote ssh+remote+xy /pathOnXY`. For https://github.com/microsoft/vscode-remote-release/issues/585

Commenter:seantma Time:2019-10-22T15:52:1
Requirement changed context
Comment Context:  apart from adding the ssh config entries above if windows Set-Service ssh-agent -StartupType Automatic   in powershell now the vs code should not prompt...  I'm getting some permission error with this attempt. Any suggestions?  Set-Service : Service 'OpenSSH Authentication Agent (ssh-agent)' cannot be configured due to the following error: Access is denied At line:1 char:1 +Set-Service ssh-agent -StartupType Automatic +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ +CategoryInfo          : PermissionDenied: (System.ServiceProcess.ServiceController:ServiceController) [Set-Service], ServiceCommandException +FullyQualifiedErrorId : CouldNotSetService,Microsoft.PowerShell.Commands.SetSe

Commenter:brezelman Time:2019-10-26T17:44:4
Requirement changed context
Comment Context:  I'm getting some permission error with this attempt. Any suggestions?  @seantma: PowerShell needs to be run as Administrator to have the needed Permission

Commenter:vitasam Time:2019-10-27T09:33:4
Requirement changed context
Comment Context:  apart from adding the ssh config entries above if windows Set-Service ssh-agent -StartupType Automatic in powershell now the vs code should not prompt...  It did not help in my case, VCode returns following errors, when I was trying to sync local commit with origin (re

Commenter:vitasam Time:2019-10-27T09:36:3
Comment Context: fatal: Could not read from remote repository.  Please make sure you have the correct access rights and the repository exists.  It looks like VCode does not use global GIT config (name and email), could it

Commenter:leductan-nguyen Time:2019-11-13T22:18:5
Requirement changed context
Comment Context: Did this and it works (not tested with a ssh key with passphrase) :  Open a new terminal inside Visual Code, choose current project folder if prompted VS will open a terminal with Poweshell Run ssh-keygen.exe -> Enter, enter, enter..... -> key created in .ssh in user's folder (normallly in C:\\Users<username>) Copy the content of the key (.ssh/id_rsa.pub) and add to new key on Github settings  Tha

Commenter:ranolfi Time:2019-11-14T02:09:4
Requirement changed context
Comment Context: This is no proper solution, @leductan-nguyen. Not only is this issue specifically about password-protected keys, but also it just won't work if you gotta have multiple keys (I have one for GitHub and another for GitLab for example)

Commenter:Badbreaddead Time:2019-11-19T20:08:1
Requirement changed context
Comment Context: Any progress with this one

Commenter:renehamburger Time:2019-11-27T09:49:4
Requirement changed context
Comment Context: @Badbreaddead, several solutions or workarounds have been posted above. It depends on the OS you are using: OS X Follow @dschu-lab's solution and add Host *    AddKeysToAgent yes    UseKeychain yes   to the very end of ~/.ssh/config. If your ssh key does not have a standard name, you may also need to specify it with IdentityFile /path/to/your/ssh/private/key as others pointed out. You'll then be prompted to add your passphrase the very first time you use it and it will then be stored in the Keychain for any subsequent uses. Linux Install keychain, e.g. via sudo apt install keychain, as @Silentz0r pointed out above. He then executes keychain --eval <ssh-key-name>, but it seems that keychain <path-to-ssh-key> has the same effect. Adding either to your .bashrc or equivalent should do the trick. Windows @geordanr's workaround  is the only one that worked for me. Execute the following commands in Git Bash to add the ssh key to the agent and run code in the same session: $ eval `ssh-agent` $ ssh-add /path/to/key $ code  If you want to save yourself having to type the first two commands every time, you can also add something like #use fix path for SSH_AUTH_SOCK so it works more then one instance of gitbash export SSH_AUTH_SOCK= $TEMP/ssh_agent_socket   ps | grep ssh-agent > /dev/null RUNNING=$?;  if [  $RUNNING  -eq  1  ]  then # ssh-agent is not yet running     eval `ssh-agent -a $SSH_AUTH_SOCK` fi ssh-add  to your ~/.bashrc file in Git Bash to start the ssh-agent automatically (taken from here and adjusted slightly). If your key does not have a standard name, you'll need to specify the path to it after ssh-add, e.g. 

Commenter:matt-duffy Time:2019-12-05T14:25:1
Requirement changed context
Comment Context:  Which IDE actually supports SSH passcodes? Because Jetbrains\u2019s products don\u2019t either. So you have 2 of the top 3 vendors not supporting SSH passcodes natively (and the other - Github - I just don\u2019t know if their Atom editor supports SSH passcodes natively). \u2026 On Aug 29, 2019, at 8:43 PM, Chris Migut @.***> wrote: Updated by visual studio code, can no longer interact with my github through the application. Version 1.37.1 Does the MS team just hate SSH? \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub <#13680?email_source=notifications&email_token=ACKS4GSGFBF2OGBCXPN55LDQHB3NLA5CNFSM4CSXV3P2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5QI7ZA#issuecomment-526421988>, or mute the thread https://github.com/notifications/unsubscribe-auth/ACKS4GTHNDBY5DETIRNVX6TQHB3NLANCNFSM4CSXV3PQ.  PyCharm supports my ssh key with passphrase with no problem, it asked me for the passphrase once and never again and all git functionality works as expec

Commenter:ranolfi Time:2019-12-05T22:05:0
Requirement changed context
Comment Context:  Execute the following commands in Git Bash to add the ssh key to the agent and run code in the same session: $ eval ssh-agent $ ssh-add /path/to/key $ code  For what it's worth, this works on Linux just as well - and there's no need to launch code via the terminal. The shortcut will do fine too. The terminal itself can be closed right after these commands. I know of at least another workaround: Install ssh-askpass (on Arch Linux this is provided by both the x11-ssh-askpass and also the seahorse packages, and the binaries reside in /usr/lib/ssh/ssh-askpass and /usr/lib/seahorse/ssh-askpass respectively). Installing one of these packages is all that's needed. VS Code will launch the password dialog every time it's req

author:isidorn
Requirement changed code
date:2019-12-18T09:58:02Z
commit title:Revert "Windows ssh remote: Cannot use `\` in explorer new file dialog to create directories"
